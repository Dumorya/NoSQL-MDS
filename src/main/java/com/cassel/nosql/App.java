/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.cassel.nosql;

import java.util.Arrays;
import java.util.Scanner;

import org.bson.Document;

import com.mongodb.ConnectionString;
import com.mongodb.MongoClientSettings;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoIterable;
import com.mongodb.client.MongoClient;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) throws Exception {
        System.out.println(new App().getGreeting());
        
        String database = "";
        String host = "";
        int port = 0;
        
        for(int i = 0 ; i < args.length ; i++)
        {
        	if (args[i].equals("--db"))
        	{
                if (i + 1 < args.length && !args[i + 1].startsWith("--"))
                {
                	database = args[i+1];
                }
                else
                {
                	throw new Exception("--db not defined");
                }
            }
        	
        	if (args[i].equals("--host"))
        	{
                if (i + 1 < args.length && !args[i + 1].startsWith("--"))
                {
                	host = args[i+1];
                }
                else
                {
                	throw new Exception("--host not defined");
                }
            }
        	
        	if (args[i].equals("--port"))
        	{
                if (i + 1 < args.length && !args[i + 1].startsWith("--"))
                {
                	String portString = args[i+1];
                	port = Integer.parseInt(portString);
                }
                else
                {
                	throw new Exception("--port not defined");
                }
            }
        }
        
        // connection
        MongoClient mongoClient = getMongoClient(host, port);
        
        // get db
        MongoDatabase db = mongoClient.getDatabase(database);
        
        // get collections name 
        MongoIterable <String> collections = db.listCollectionNames();
        
        for (String collectionName: collections)
        {
            System.out.println(collectionName);
        }
        
        boolean chosen = false;
        String chosenCollection = "";
        
    	Scanner sc = new Scanner(System.in);

        while(!chosen)
        {
            System.out.println("Veuillez saisir une collection, ou 'fin' pour finir :");
            chosenCollection = sc.nextLine();
            
            for (String collectionName: collections)
            {
                if(chosenCollection.equals(collectionName))
                {
                    System.out.println("Vous avez saisi : " + chosenCollection);
                    chosen = true;
                }
                else if(chosenCollection.equals("fin"))
                {
                	System.out.println("FIN");
                	chosen = true;
                }
                else
                {
                	System.out.println("Cette collection n'existe pas.");
                	chosen = false;
                }
            }
        }
        
        MongoCollection<Document> collection = db.getCollection(chosenCollection);
        
        chosen = false;
        
        while(!chosen)
        {
            System.out.println("Taper 're' pour rechercher un document, 'in' pour insérer un document, 'fin' pour arrêter.");
            String choice = sc.nextLine();
            
            	if(choice.equals("re"))
                {
                    System.out.println("Vous avez choisi de rechercher un document");
                    chosen = true;
                }
                else if(chosenCollection.equals("in"))
                {
                	System.out.println("Vous avez choisi d'insérer un document");
                	chosen = true;
                }
                else if(chosenCollection.equals("fin"))
                {
                	System.out.println("FIN");
                	chosen = true;
                }
                else
                {
                	System.out.println("Ce choix n'existe pas. Recommencer");
                	chosen = false;
                }

        }
        
        // Document myDoc = collection.find();
        // System.out.println(myDoc.toJson());
    }
    
    public static MongoClient getMongoClient(final String host, final int port)
    {
    	MongoClient mongoClient = MongoClients.create(
                MongoClientSettings.builder()
                        .applyToClusterSettings(builder ->
                                builder.hosts(Arrays.asList(new ServerAddress(host, port))))
                        .build());
    	    	    	
    	return mongoClient;
    }
}
